@startuml "C3 Component Diagram"

title "SPWS - Diagrama de Componentes da API Rest"

!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()

skinparam Style strictuml
skinparam backgroundcolor transparent

Container(MobileApp, "Aplicação Web", "React/JavaScript", "Provê aos usuários acesso as funcionalidades a partir do cliente.")
ContainerDb(Database, "Supabase Postgres", "RDBMS/Postgres", "É responsável por persistir os dados extraídos da Scratch API e processados pelo back-end do sistema SPWS.")
System_Ext(SystemScratchApi, "Scratch API", "É responsável por consultar informações internas do Scratch como, por exemplo, o pseudocódigo dos projetos em formato JSON e seus metadados.")

Container_Boundary(SystemApi, "API REST") {

  Container_Boundary(SystemResources, "Resources") {
    Component(ProjectResource, "Project Resource", "Flask Resource", "Traduz a chamada HTTP aos projetos do Scratch em chamada de controller de <b>Projetos.</b>")
    Component(StudioResource, "Studio Resource", "Flask Resource", "Traduz a chamada HTTP aos estúdios do Scratch em chamada de controller de <b>Studios.</b>")

    Rel(MobileApp, ProjectResource, "Makes API calls to", "JSON/HTTP")
    Rel(MobileApp, StudioResource, "Makes API calls to", "JSON/HTTP")
  }

  Container_Boundary(SystemControllers, "Controllers") {
    Component(ProjectController, "Project Controller", "Flask Controller", "É responsável por delegar a execução do fluxo da funcionalidade ao serviço que está na camada imediatamente inferior, sendo o <b>ProjectService.</b>")
    Component(StudioController, "Studio Controller", "Flask Controller", "É responsável por delegar a execução do fluxo da funcionalidade ao serviço que está na camada imediatamente inferior, sendo o <b>StudioService.</b>")

    Rel(ProjectResource, ProjectController, "Uses")
    Rel(StudioResource, StudioController, "Uses")
  }

  Container_Boundary(SystemServices, "Services") {
    Component(ProjectService, "Project Service", "Flask Service", "É responsável por realizar as consultas à base de dados e solicitar informações da Scratch API por intermédio dos métodos presentes no utilitário <b>project.</b>")
    Component(StudioService, "Studio Service", "Flask Service", "É responsável por realizar as consultas à base de dados e solicitar informações da Scratch API por intermédio dos métodos presentes no utilitário <b>studio.</b>")

    Rel(ProjectController, ProjectService, "Uses")
    Rel(StudioController, StudioService, "Uses")
  }

  Container_Boundary(SystemUtilities, "Utilities") {
    Component(ProjectUtility, "Project Utility", "Flask Utility", "É responsável por realizar as chamadas de API necessárias para obter os metadados e o conteúdo do pseudocódigo do projeto Scratch.")
    Component(StudioUtility, "Studio Utility", "Flask Utility", "É responsável por realizar as chamadas de API necessárias para obter os metadados do studio de projetos bem como os projetos nele contidos.")

    Rel(ProjectService, ProjectUtility, "Uses")
    Rel(StudioService, StudioUtility, "Uses")
  }

  Rel(ProjectService, Database, "Uses")
  Rel(StudioService, Database, "Uses")
  Rel(ProjectUtility, SystemScratchApi, "Makes API calls to", "JSON/HTTP")
  Rel(StudioUtility, SystemScratchApi, "Makes API calls to", "JSON/HTTP")

}

@enduml
